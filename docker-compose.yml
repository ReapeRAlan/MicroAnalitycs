# Archivo Docker Compose para MicroAnalytics
# ==========================================

version: '3.8'

services:
  # Backend FastAPI
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: microanalytics-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=sqlite:///./microanalytics.db
      - ENV=production
    volumes:
      - ./backend:/app/backend
      - ./models:/app/models
      - ./logs:/app/logs
    networks:
      - microanalytics-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/predict/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Streamlit
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: microanalytics-frontend
    ports:
      - "8501:8501"
    environment:
      - BACKEND_URL=http://backend:8000
    volumes:
      - ./frontend:/app/frontend
      - ./chatbot:/app/chatbot
    networks:
      - microanalytics-network
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Ollama (opcional, para ejecutar localmente)
  ollama:
    image: ollama/ollama:latest
    container_name: microanalytics-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama-data:/root/.ollama
    networks:
      - microanalytics-network
    restart: unless-stopped
    environment:
      - OLLAMA_ORIGINS=*
    command: serve

  # Nginx (proxy reverso)
  nginx:
    image: nginx:alpine
    container_name: microanalytics-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - microanalytics-network
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

networks:
  microanalytics-network:
    driver: bridge

volumes:
  ollama-data:
    driver: local
